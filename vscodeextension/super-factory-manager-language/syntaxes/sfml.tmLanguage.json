{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Super Factory Manager Language",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
			{
				"name": "variable.parameter.sfml",
				"match": "\\b(TICKS|TICK|ticks|tick)\\b"
			},
			{
				"name": "variable.parameter.sfml",
				"match": "\\b(fluid|gas|item|fe)\\b\\s*:\\s*(\\S+)"
			},
			{
				"name": "variable.parameter.sfml",
				"match": "(?<=input\\s)(.*?)\\s+(?=from|except|retain)"
			},
			{
				"name": "variable.parameter.sfml",
				"match": "(?<=output\\s)(.*?)\\s+(?=to|except|retain)"
			},

			{
				"name": "storage.type.primitive.sfml",
				"match": "\\b(FORGET|forget)\\b"
			},
			{
				"name": "storage.type.primitive.sfml",
				"match": "round(\\s+robin(\\s+by(\\s+(label|block))?)?)?"
			},
			{
				"name": "storage.type.primitive.sfml",
				"match": "(?<=\\s)(eq|gt|lt|le|ge)(?=\\s)"
			},

			{
				"name": "keyword.control.sfml",
				"match": "\\b(EXCEPT|MOVE|FROM|TO|INPUT|OUTPUT|WHERE|SLOTS|RETAIN|EACH|TOP|BOTTOM|NORTH|EAST|SOUTH|WEST|SIDE|SELF|SECONDS|EVERY|PULSE|WORLD|PROGRAM|except|move|from|to|input|output|where|slots|retain|each|top|bottom|north|east|south|west|side|self|seconds|every|pulse|world|program)\\b"
			},

			{
				"name": "storage.type.name.sfml",
				"match": "\\b(name|NAME)\\b"
			},

			{
				"name": "keyword.control.flow.sfml",
				"match": "\\b(DO|do|END|end|IF|if|ELSE|else|THEN|then)\\b"
			},

			{
				"name": "invalid",
				"match": "(?<=\\bevery\\s+)redstone(?=\\s+pulse\\b)"
			},
			{
				"name": "invalid",
				"match": "(?<=\\bif\\s+)redstone(?=\\s+(eq|gt|lt|le|ge)\\b)"
			}
		]

		},
		"comments": {
			"patterns": [
				{
					"begin": "--",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.sfml"
						}
					},
					"end": "\\n",
					"name": "comment.line.double-dash.sfml"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.sfml",
					"match": "\\b\\d+\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.sfml",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.sfml",
					"match": "\\\\."
				}
			]
		}
	},
	"scopeName": "source.sfml"
}